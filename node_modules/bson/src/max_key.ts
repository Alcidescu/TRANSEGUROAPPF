<<<<<<< HEAD
import { BSONValue } from './bson_value';

=======
>>>>>>> 36e6c1d122dc190a65359e5ccef36f21fa6dd909
/** @public */
export interface MaxKeyExtended {
  $maxKey: 1;
}

/**
 * A class representation of the BSON MaxKey type.
 * @public
 * @category BSONType
 */
<<<<<<< HEAD
export class MaxKey extends BSONValue {
  get _bsontype(): 'MaxKey' {
    return 'MaxKey';
=======
export class MaxKey {
  _bsontype!: 'MaxKey';

  constructor() {
    if (!(this instanceof MaxKey)) return new MaxKey();
>>>>>>> 36e6c1d122dc190a65359e5ccef36f21fa6dd909
  }

  /** @internal */
  toExtendedJSON(): MaxKeyExtended {
    return { $maxKey: 1 };
  }

  /** @internal */
  static fromExtendedJSON(): MaxKey {
    return new MaxKey();
  }

<<<<<<< HEAD
=======
  /** @internal */
  [Symbol.for('nodejs.util.inspect.custom')](): string {
    return this.inspect();
  }

>>>>>>> 36e6c1d122dc190a65359e5ccef36f21fa6dd909
  inspect(): string {
    return 'new MaxKey()';
  }
}
<<<<<<< HEAD
=======

Object.defineProperty(MaxKey.prototype, '_bsontype', { value: 'MaxKey' });
>>>>>>> 36e6c1d122dc190a65359e5ccef36f21fa6dd909
